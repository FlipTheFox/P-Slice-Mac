# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, experimental ]
  pull_request:
    branches: [ main, experimental ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          sh ./setup/unix.sh
      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}" -D officialBuild
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: linuxBuild
          path: 'export/release/linux/bin'
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null --quiet
          .\"setup/windows.bat"
        shell: cmd
      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> %USERPROFILE%/settings.cocoa
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"  -D officialBuild
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMac:
    runs-on: macos-12

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
      - name: Install Dependenceis
        run: |
          haxelib install lime 8.1.3
          haxelib install openfl 9.3.4
          haxelib install flixel 5.6.2
          haxelib install flixel-addons 3.2.3
          haxelib install flixel-ui 2.6.1
          haxelib install flixel-tools 1.5.1
          haxelib install SScript 7.7.0
          haxelib install tjson 1.4.0
          haxelib install hxcpp > /dev/null --quiet
      - name: Pull other stuff lawl
        run: |
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec.git 0a51aed0d9523d22a83e453ce7b593ec7fed4742
          haxelib git flxanimate https://github.com/ShadowMario/flxanimate dev
          haxelib git linc_luajit https://github.com/superpowers04/linc_luajit
          haxelib git hxdiscord_rpc https://github.com/MAJigsaw77/hxdiscord_rpc
          haxelib git FlxPartialSound https://github.com/FunkinCrew/FlxPartialSound.git f986332ba5ab02abd386ce662578baf04904604a
      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"  -D officialBuild
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: macBuild
          path: export/release/macos/bin
